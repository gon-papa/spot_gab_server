"""create_user_locations

Revision ID: 862c735e6585
Revises: 4b72a833bdc3
Create Date: 2024-04-03 13:41:39.707600

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel            
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '862c735e6585'
down_revision: Union[str, None] = '4b72a833bdc3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_locations',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('uuid', sa.String(length=36), nullable=False, comment='UUID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='ユーザーID'),
    sa.Column('lat', sa.Numeric(precision=10, scale=8), nullable=False, comment='緯度'),
    sa.Column('lng', sa.Numeric(precision=11, scale=8), nullable=False, comment='経度'),
    sa.Column('point', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False, comment='位置情報'),
    sa.Column('geo_hash', sa.String(length=12), nullable=False, comment='ジオハッシュ'),
    sa.Column('srid', sa.String(length=10), nullable=False, comment='SRID'),
    sa.Column('save_datetime', sa.TIMESTAMP(timezone=True), nullable=True, comment='保存日時'),
    sa.Column('country', sa.String(length=100), nullable=True, comment='国'),
    sa.Column('administrative_area', sa.String(length=100), nullable=True, comment='都道府県'),
    sa.Column('sub_administrative_area', sa.String(length=100), nullable=True, comment='市区町村(日本は無い場合が多い)'),
    sa.Column('locality', sa.String(length=100), nullable=True, comment='市区町村'),
    sa.Column('sub_locality', sa.String(length=100), nullable=True, comment='町名(日本は無い場合が多い)'),
    sa.Column('postal_code', sa.String(length=100), nullable=True, comment='郵便番号'),
    sa.Column('name', sa.String(length=100), nullable=True, comment='地名'),
    sa.Column('street', sa.String(length=100), nullable=True, comment='住所'),
    sa.Column('iso_country_code', sa.String(length=10), nullable=True, comment='ISO国コード'),
    sa.Column('thoroughfare', sa.String(length=100), nullable=True, comment='通り'),
    sa.Column('sub_thoroughfare', sa.String(length=100), nullable=True, comment='番地'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index('idx_user_locations_point', 'user_locations', ['point'], unique=False, postgresql_using='gist')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_locations_point', table_name='user_locations', postgresql_using='gist')
    op.drop_table('user_locations')
    # ### end Alembic commands ###
